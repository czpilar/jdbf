<HTML>
<head>
	<title>DBF structure</title>

	<meta name="Author" content="WhiteTown Software"/>

	<style type="text/css">
	A:link    { font-family: Tahoma, Verdana, Arial, Sans-Serif; font-size: 8pt; TEXT-DECORATION: none; }
	A:visited { font-family: Tahoma, Verdana, Arial, Sans-Serif; font-size: 8pt; TEXT-DECORATION: none; }
	A:active  { TEXT-DECORATION: underline;color:#000090 ; font-family: Tahoma, Verdana, Arial, Sans-Serif; font-size: 8pt;  }
	A:hover   { TEXT-DECORATION: underline;color:#ff0090 ; font-family: Tahoma, Verdana, Arial, Sans-Serif; font-size: 8pt;  }
	table	  { font-family: Tahoma, Verdana, Arial, Helvetica, "MS Sans Serif", sans-serif; font-size: 8pt; background-repeat:no-repeat; } 
	body	  { font-family: Tahoma, Verdana, Arial, Helvetica, "MS Sans Serif", sans-serif;  font-size : 8pt; } 
	select	  { font-family: Tahoma, Verdana, Arial, Helvetica, "MS Sans Serif", sans-serif;  font-size : 8pt; width=324px; } 
	body	  { background-repeat: no-repeat;  }
	</style>


<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-7795372-1");
pageTracker._trackPageview();
} catch(err) {}</script>

</head>
<body bgcolor="#FFFFFF" text="#000000">

<font size=+1>DBF structure</font><p>

A table file consists of a header record and data records.<br>
The header record defines the structure of the table and contains any other information related to the table. The header record starts at file position zero. Data records follow the header, in consecutive bytes, and contain the actual text of the fields. <p>

Note:   The data in the data file starts at the position indicated in bytes 8 to 9 of the header record. Data records begin with a delete flag byte. If this byte is an ASCII space (0x20), the record is not deleted. If the first byte is an asterisk (0x2A), the record is deleted. The data from the fields named in the field subrecords follows the delete flag.<p>

The length of a record, in bytes, is determined by summing the defined lengths of all fields. Integers in table files are stored with the least significant byte first.<p>


<h4>Table Header Record Structure</h4>

<table width=80% cellspacing=0 cellpadding=3 border=1>
<tr bgcolor=#eeeeee>
	<td width=20%><b>Byte offset</b></td>
	<td><b>Description</b></td>
</tr>

<tr>
	<td>0</td>
	<td>File type:
	<ul>
	<li>0x02   FoxBASE
	<li>0x03   FoxBASE+/Dbase III plus, no memo
	<li>0x30   Visual FoxPro
	<li>0x31   Visual FoxPro, autoincrement enabled
	<li>0x43   dBASE IV SQL table files, no memo
	<li>0x63   dBASE IV SQL system files, no memo
	<li>0x83   FoxBASE+/dBASE III PLUS, with memo
	<li>0x8B   dBASE IV with memo
	<li>0xCB   dBASE IV SQL table files, with memo
	<li>0xF5   FoxPro 2.x (or earlier) with memo
	<li>0xFB   FoxBASE
	</ul>
	</td>
</tr>

<tr>
	<td>1 - 3</td>
	<td>Last update (YYMMDD)</td>
</tr>

<tr>
	<td>4 – 7</td>
	<td> Number of records in file </td>

<tr>
	<td>8 – 9</td>
	<td> Position of first data record </td>
</tr>

<tr>
	<td>10 – 11</td>
	<td> Length of one data record, including delete flag </td>
</tr>

<tr>
	<td>12 – 27</td>
	<td> Reserved 	</td>
</tr>

<tr>
	<td>28</td>
	<td> Table flags:
	<ul>
	<li>0x01   file has a structural .cdx
	<li>0x02   file has a Memo field
	<li>0x04   file is a database (.dbc)
	</ul>
	This byte can contain the sum of any of the above values. For example, the value 0x03 indicates the table has a structural .cdx and a Memo field. </td>
</tr>

<tr>
	<td>29</td>
	<td> Code page mark </td>
</tr>

<tr>
	<td>30 – 31</td>
	<td> Reserved, contains 0x00 </td>
</tr>

<tr>
	<td>32 – n</td>
	<td> Field subrecords<br>
The number of fields determines the number of field subrecords. One field subrecord exists for each field in the table. </td>
</tr>

<tr>
	<td>n+1</td>
	<td> Header record terminator (0x0D) </td>
</tr>

<tr>
	<td>n+2 to n+264</td>
	<td> A 263-byte range that contains the backlink, which is the relative path of an associated database (.dbc) file, information. If the first byte is 0x00, the file is not associated with a database. Therefore, database files always contain 0x00. </td>
</tr>
</table>

<h4>Field Subrecords Structure</h4>


<table width=80% cellspacing=0 cellpadding=3 border=1>

<tr bgcolor=#eeeeee>
	<td width=20%><b>Byte offset</b></td>
	<td><b>Description</b></td> 
</tr>

<tr>
	<td>0 – 10  </td>
	<td>Field name with a maximum of 10 characters. If less than 10, it is padded with null characters (0x00). </td> 
</tr>

<tr>
	<td>11 </td>
	<td>Field type:
	<ul> 
	<li>C   –   Character
	<li>N   –   Numeric
	<li>F   –   Float
	<li>D   –   Date
	<li>L   –   Logical
	<li>M   – 	Memo
	<li>G   – 	General
	<li>C   –   Character (binary)
	<li>M   –   Memo (binary)
	<li>B   –   Double
	<li>I   –   Integer
	<li>Y   –   Currency
	<li>T   –   DateTime
	<li>P   –   Picture 
	</ul>
	</td> 
</tr>

<tr>
	<td>12 – 15 </td>
	<td>Displacement of field in record </td> 
</tr>

<tr>
	<td>16 </td>
	<td>Length of field (in bytes) </td> 
</tr>

<tr>
	<td>17 </td>
	<td>Number of decimal places </td> 
</tr>

<tr>
	<td>18 </td>
	<td>Field flags:
	<ul>
	<li>0x01   System Column (not visible to user)
	<li>0x02   Column can store null values
	<li>0x04   Binary column (for CHAR and MEMO only) 
	<li>0x06   (0x02+0x04) When a field is NULL and binary (Integer, Currency, and Character/Memo fields)
	<li>0x0C   Column is autoincrementing 
	</ul>
	</td> 
</tr>

<tr>
	<td>19 - 22 </td>
	<td>Value of autoincrement Next value </td> 
</tr>

<tr>
	<td>23 </td>
	<td>Value of autoincrement Step value </td> 
</tr>

<tr>
	<td>24 – 31 </td>
	<td>Reserved</td> 
</tr>

</table>

</body>
</HTML>
